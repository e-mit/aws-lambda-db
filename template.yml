AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Create a SQS and a lambda which reads from the queue and writes to RDS
Parameters:
  functionName:
    Description: The name of the lambda function
    Type: String
    MinLength: 1
    MaxLength: 100
  VPCsecurityGroupID:
    Description: The ID of the security group in the VPC
    Type: String
    MinLength: 1
    MaxLength: 300
  VPCsubnetIDlist:
    Description: A comma-separated list (in one string) of subnet IDs in the VPC
    Type: String
    MinLength: 1
    MaxLength: 300
  timeout:
    Description: Timeout in seconds for the lambda
    Type: Number
    MinValue: 1
    Default: 10

Resources:

  queue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 43200
      QueueName:
        !Join
        - '-'
        - - !Ref functionName
          - 'queue'
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DLQ.Arn
        maxReceiveCount: 3
      VisibilityTimeout:
        # Make this 10x the lambda timeout
        !Join
        - ''
        - - !Ref timeout
          - '0'

  DLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 604800
      QueueName:
        !Join
        - '-'
        - - !Ref functionName
          - 'dlq'

  function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Ref: functionName
      Architectures:
        - x86_64
      MemorySize: 128
      PackageType: Zip
      Handler: lambda_function.lambda_handler
      Runtime: python3.10
      CodeUri: function
      Description: Read data from SQS and write to RDS
      Timeout: !Ref timeout
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AWSLambdaSQSQueueExecutionRole
      Layers:
        - Ref: libs
      Events:
        SQSEvent:
          Type: SQS
          Description: Run the Lambda with an SQS event
          Properties:
            BatchSize: 1
            MaximumBatchingWindowInSeconds: 0
            Enabled: true
            Queue: !GetAtt queue.Arn
      VpcConfig:
        SecurityGroupIds:
          - !Ref VPCsecurityGroupID
        SubnetIds: !Split [",", !Ref VPCsubnetIDlist]

  libs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        !Join
        - '-'
        - - !Ref functionName
          - 'layer'
      Description: Python packages used by the lambda.
      ContentUri: package
      CompatibleArchitectures:
        - x86_64
      CompatibleRuntimes:
        - python3.10
